plugins {
	id 'org.springframework.boot' version '2.2.1.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
}

bootJar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

group = 'com.foxtel.spring.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	//Include metrics logging
	compile 'org.springframework.boot:spring-boot-starter-actuator'

	//Basic spring-boot libraries
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	
	//spring security libraries
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	//Swagger API documentaion
	compile 'io.springfox:springfox-swagger2:2.9.2'
	compile 'io.springfox:springfox-swagger-ui:2.9.2'

	//Custom metrics using Prometheus
	// implementation 'io.micrometer:micrometer-registry-prometheus'

	//dev tool libraries
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	
	//in-memory db
	runtime 'com.h2database:h2'

	//unit test libraries
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.springframework.batch:spring-batch-test'
	testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
	useJUnitPlatform()
}
